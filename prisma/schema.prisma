// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("user")
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_Project_User")
  userId    Int
  xtables   Xtable[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("project")
}

model Xtable {
  id            Int            @id @default(autoincrement())
  name          String
  alias         String
  Project       Project        @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_Table_Project")
  projectId     Int
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  xcolumns      Xcolumn[]
  relationships Relationship[]
  queries       Query[]

  @@map("xtable")
}

model Xcolumn {
  id           Int      @id @default(autoincrement())
  name         String
  alias        String
  isForeignKey Boolean  @default(false)
  isPrimaryKey Boolean  @default(false)
  dataType     DataType @default(String)
  Xtable       Xtable   @relation(fields: [xtableId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_Column_Table")
  xtableId     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("xcolumn")
}

model Relationship {
  id                     Int         @id @default(autoincrement())
  firstTableCardinality  Cardinality @default(c11)
  secondTableCardinality Cardinality @default(c11)
  Xtable                 Xtable      @relation(fields: [firstTableId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_Relationship_Table")
  firstTableId           Int
  secondTableId          Int
  createdAt              DateTime    @default(now())
  updatedAt              DateTime    @updatedAt

  @@map("relationship")
}

model Query {
  id          Int      @id @default(autoincrement())
  query       String
  dbType      DbType   @default(SqlServer)
  Xtable      Xtable   @relation(fields: [mainTableId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_Query_Table")
  mainTableId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("query")
}

enum DataType {
  String
  Number
  Date
  DateTime
  Boolean
}

enum Cardinality {
  c01
  c11
  c1n
  c0n
}

enum DbType {
  SqlServer
  OracleDb
}
